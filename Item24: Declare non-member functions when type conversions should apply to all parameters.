If you wanna have a multiplication for Rational class, better to define it as a non-member function.

class Rational{
  public:
  const Rational operator*(const Rational& rhs) const;
}

Rational a;
a * 2 // it works well
2 * a // not working
//  the parameters are eligible for implicit type conversion only if they are listed in the parameter list. The implicit 
parameter corresponding to the object on which the member function is invoked - the one this points to - is never eligible for
implicit conversions.
